
//////SECTION = 1;/////////

QUE = 1;

create table DEPT
(DEPTNO int(2),
DNAME varchar(15),
LOC	varchar(10)
);

INSERT INTO DEPT (DEPTNO, DNAME, LOC)
VALUES(10,	'ACCOUNTING',	'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS',	'BOSTON');


QUE = 2;

CREATE TABLE EMP
(EMPNO    int(4),
ENAME     varchar(10),
JOB	      varchar(9),
HIREDATE  date,
SAL	      float(7,2),
COMM      float(7,2),
DEPTNO    int(2));

INSERT INTO EMP (EMPNO, ENAME, JOB, HIREDATE, SAL, COMM, DEPTNO)
VALUES(7839, 'KING', 'MANAGER',	'1991-11-17', 5000, NULL, 10),
(7698, 'BLAKE', 'CLERK', '1981-05-01', 2850, NULL, 30),
(7782, 'CLARK', 'MANAGER', '1981-06-09', 2450, NULL, 10),
(7566, 'JONES', 'CLERK', '1981-04-02', 2975, NULL, 20),
(7654, 'MARTIN', 'SALESMAN', '1981-09-28', 1250, 1400, 30),
(7499, 'ALLEN', 'SALESMAN', '1981-02-20', 1600, 300, 30);


QUE = 3;

SELECT * FROM EMP WHERE SAL BETWEEN 2500 AND 5000;

QUE = 4;

SELECT * FROM EMP ORDER BY ENAME DESC;
SELECT ENAME FROM EMP ORDER BY ENAME DESC;

QUE = 5;

SELECT LOWER(JOB) FROM EMP;
SELECT DISTINCT LOWER(JOB) FROM EMP;

QUE = 6;

SELECT ENAME,LENGTH(ENAME) FROM EMP;

QUE = 7;

SELECT DEPTNO,COUNT(ENAME) FROM EMP GROUP BY DEPTNO;

QUE = 8;

SELECT DNAME,ENAME FROM DEPT,EMP WHERE DEPT.DEPTNO = EMP.DEPTNO ORDER BY DNAME;

QUE = 9;

SELECT ENAME FROM EMP WHERE ENAME LIKE '%AR%';

QUE = 10;

SELECT SAL, SAL*0.20 HRA FROM EMP;

/////SECTION = 2;///////////

QUE = 1;

CREATE TABLE TEMPP
(STR1 VARCHAR(20),
STR2 VARCHAR(20),
RESULT VARCHAR(20)
);

delimiter //
create procedure PROC1()
begin
declare STR1 VARCHAR(20) default 'DAC';
declare STR2 VARCHAR(20) default 'CDAC';
if (instr(STR1, STR2)>0 OR instr(STR2, STR1)>0) THEN
          INSERT INTO TEMPP VALUES(STR1, STR2, 'EXIST');
else
          INSERT INTO TEMPP VALUES(STR1, STR2, 'NOT EXIST');
end if;
end; //
delimiter ;

call PROC1();
SELECT * FROM TEMPP;


QUE = 2;

CREATE TABLE TEMPP1
(REMARK1 VARCHAR(20));

delimiter //
create function FUNC1(a int, b int, c int)
returns boolean
deterministic
begin
if (a+b)>c then 
if (b+c)>a then
if (a+c)>b then
         RETURN TRUE;
end if;
end if;
else 
         RETURN FALSE;
end if;
end; //
delimiter ;

delimiter //
create procedure PROC2()
begin
declare x int;
set x = FUNC1(20,20,30);
IF x THEN 
       INSERT INTO TEMPP1 VALUES ('TRIANGLE VALID');
ELSE
       INSERT INTO TEMPP1 VALUES ('TRIANGLE NOT VALID');
END IF;
end; //
delimiter ;

drop procedure proc2;

select * from tempp1;